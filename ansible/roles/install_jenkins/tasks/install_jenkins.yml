---
 - name: create jenkins home #root
   become: yes
   become_user: root
   file:
    path: "{{jenkins_home}}"
    state: directory
    mode: '0755'
    owner: tomcat
    group: tomcat
    

 - name: change env vars
   become: yes
   become_user: root
   lineinfile:
    dest: '/etc/environment'
    regexp: "{{ item.reg }}"
    insertafter: "{{ item.insert }}"
    line: "{{ item.line }}"
   with_items:
    - { reg: '^JAVA_OPTS', insert: "^JAVA_OPTS=\"-Djenkins.install.runSetupWizard=false\"", line: "JAVA_OPTS=\"-Djenkins.install.runSetupWizard=false\"" }
    - { reg: '^JAVA_ARGS', insert: "^JAVA_ARGS=\"-Djenkins.install.runSetupWizard=false\"", line: "JAVA_ARGS=\"-Djenkins.install.runSetupWizard=false\"" }
    - { reg: '^JENKINS_HOME', insert: "^JENKINS_HOME=\"{{jenkins_home}}\"", line: "JENKINS_HOME=\"{{jenkins_home}}\"" }
    - { reg: '^ANSIBLE_CONFIG', insert: "^ANSIBLE_CONFIG=\"{{ansible_conf_path}}\"", line: "ANSIBLE_CONFIG=\"{{ansible_conf_path}}\"" }

   register: task_result

 - name: stop tomcat and restart server
   become: yes
   become_user: tomcat
   block:

   - name: restart server
     become: yes
     become_user: root
     shell: "sleep 5 && reboot"
     async: 1
     poll: 0

   - name: wait for server start
     become: yes
     become_user: root
     wait_for_connection:
      connect_timeout: 20
      sleep: 5
      delay: 5
      timeout: 300

   when: task_result is changed

 - name: if jenkins war isset
   stat:
    path: "{{tomcat_srv_path}}/webapps/jenkins.war"
   register: stat_result

 - name: download jenkins
   get_url:
     url: "{{ jenkins_url  }}"
     dest: "{{tomcat_srv_path}}/webapps/"
     mode: '0770'
     owner: tomcat
     group: tomcat
     timeout: 60
   when: not stat_result.stat.exists

 - name: start tomcat
   become: yes
   become_user: tomcat
   shell: "nohup {{tomcat_srv_path}}/bin/startup.sh"

 - import_tasks: wait_connect.yml
   vars:
    service_url: "http://localhost:8080/"
    service_restart_name: "tomcat"

 - import_tasks: wait_connect.yml
