---
# - name: restart jenkins
#   command:
#     cmd: "java -jar jenkins-cli.jar -auth {{jenkins_username}}:{{jenkins_password}} -s http://localhost:8080/jenkins safe-restart"
#     chdir: "{{jenkins_home}}"
# - name: wait for jenkins start
#   uri:
#    url: "http://localhost:8080/jenkins/login"
#    follow_redirects: all
#    method: GET
#   register: _result
#   until: _result.status == 200
#   retries: 100
#   delay: 5
 # - name: change owner
   # become: yes
   # become_user: root
   # file:
    # path: "{{jenkins_home}}"
    
    # recurse: yes
    # mode: '0755'
    # owner: tomcat
    # group: tomcat

 - name: download cli
   get_url:
    url: "http://localhost:8080/jenkins/jnlpJars/jenkins-cli.jar"
    dest: "{{jenkins_home}}"

    
 # - name: install python-jenkins
   # pip:
    # name: python-jenkins
# - name: sleep 10s
#   pause:
#    seconds: 10
# - name: install plugin ansicolor
#   jenkins_plugin:
#     name: AnsiColor
#     url: "{{ jenkins_server_url }}"
#     state: present
# - name: install plugin timestamper
#   jenkins_plugin:
#     name: timestamper
#     url: "{{ jenkins_server_url }}"
#     state: present
# - name: intsall plugin ansibe
#   jenkins_plugin:
#     name: Ansible
#     url: "{{ jenkins_server_url }}"
#     state: present
 # - name: restart jenkins
   # command: 
    # cmd: "java -jar jenkins-cli.jar -s http://localhost:8080/jenkins safe-restart"
    # chdir: "{{jenkins_home}}"
 - name: check avalible registration
   lineinfile:
    dest: "{{jenkins_home}}/config.xml"
    regexp: "hudson.security.SecurityRealm+"
    line: ""
    state: absent
   check_mode: yes
   register: avilable_reg_res1
 - name: avalible registration
   block: 
   - name: avalible registration
     
     lineinfile:
      dest: "{{jenkins_home}}/config.xml"
      state: present
      regexp: "hudson.security.SecurityRealm+"
      line: "<securityRealm class=\"hudson.security.HudsonPrivateSecurityRealm\">\n<disableSignup>false</disableSignup>\n<enableCaptcha>false</enableCaptcha>\n</securityRealm>"
   - name: restart jenkins
     command: 
      cmd: "java -jar jenkins-cli.jar -s http://localhost:8080/jenkins safe-restart"
      chdir: "{{jenkins_home}}"
   - name: wait for jenkins start
     uri:
      url: "http://localhost:8080/jenkins/login"
      follow_redirects: all
      method: GET
     register: _result
     until: _result.status == 200
     retries: 100 
     delay: 5 
   when: avilable_reg_res1 is changed
 - name: check user isset
   lineinfile:
    dest: "{{jenkins_home}}/users/users.xml"
    regexp: "<string>{{jenkins_username}}</string>"
    line: ""
    state: absent
   check_mode: yes
   register: avilable_reg_res1
 - name: create user
   shell: 
    cmd: >
      echo 'jenkins.model.Jenkins.instance.securityRealm.createAccount("{{jenkins_username}}", "{{jenkins_password}}")' | java -jar jenkins-cli.jar -s http://localhost:8080/jenkins groovy =
    chdir: "{{jenkins_home}}"
   when: not avilable_reg_res1 is changed
 - name: job exist
   stat:
     path: "{{jenkins_home}}/jobs/{{job_name}}/"
   register: stat_result
 
 - name: add token to xml
   lineinfile:
    dest: "/home/tomcat/test.xml"
    regexp: "<authToken>+"
    line: "<authToken>{{lookup('file', '/home/ubuntu/devops/ansible/pipeline_token.txt') }}</authToken>"
 # - name: stop 
   # pause:
    # seconds: 1000
 # - name: cr j
   # jenkins_job:
    # config: "{{ lookup('file', '/home/ubuntu/devops/jenkins/test.xml') }}"
    # name: test
    # password: "{{jenkins_password}}"
    # url: http://13.53.182.235:8080
    # user: "{{jenkins_username}}"
 # - name: fff
   # file:
    # path: "/home/tomcat/jenkins_home/jobs/test34/"
    # state: directory
    # mode: '0755'
    # owner: tomcat
    # group: tomcat
 
   # when: stat_result.stat.exists == False
 - name: install AnsiColor
   command:
     cmd: "java -jar jenkins-cli.jar -auth {{jenkins_username}}:{{jenkins_password}} -s http://localhost:8080/jenkins  install-plugin AnsiColor"
     chdir: "{{jenkins_home}}"
 - name: install timestamper
   command:
     cmd: "java -jar jenkins-cli.jar -auth {{jenkins_username}}:{{jenkins_password}} -s http://localhost:8080/jenkins  install-plugin timestamper"
     chdir: "{{jenkins_home}}"
 - name: install Ansible
   command:
     cmd: "java -jar jenkins-cli.jar -auth {{jenkins_username}}:{{jenkins_password}} -s http://localhost:8080/jenkins  install-plugin Ansible"
     chdir: "{{jenkins_home}}"
 - name: install Pipeline
   command:
     cmd: "java -jar jenkins-cli.jar -auth {{jenkins_username}}:{{jenkins_password}} -s http://localhost:8080/jenkins  install-plugin workflow-aggregator"
     chdir: "{{jenkins_home}}"
 - name: create job
   shell:
    cmd: "java -jar jenkins-cli.jar -auth {{jenkins_username}}:{{jenkins_password}} -s http://localhost:8080/jenkins create-job {{job_name}} < /home/tomcat/test.xml"
    chdir: "{{jenkins_home}}"
   when: stat_result.stat.exists == False
 - name: check disable anon sing in
   lineinfile:
    dest: "{{jenkins_home}}/config.xml"
    regexp: "hudson.security.AuthorizationStrategy+"
    line: ""
    state: absent
   check_mode: yes
   register: disable_anon_res
 - name: restart jenkins
   block:
   - name: disable anon sing in
     
     lineinfile:
      dest: "{{jenkins_home}}/config.xml"
      regexp: "hudson.security.AuthorizationStrategy+"
      line: "<authorizationStrategy class=\"hudson.security.FullControlOnceLoggedInAuthorizationStrategy\">\n<denyAnonymousReadAccess>true</denyAnonymousReadAccess>\n</authorizationStrategy>"
   - name: disable register jenkins
     
     lineinfile:
      dest: "{{jenkins_home}}/config.xml"
      regexp: 'disableSignup+'
      line: '<disableSignup>true</disableSignup>'
   - name: restart jenkins
     command: 
       cmd: "java -jar jenkins-cli.jar -auth {{jenkins_username}}:{{jenkins_password}} -s http://localhost:8080/jenkins safe-restart"
       chdir: "{{jenkins_home}}"
   - name: wait for jenkins start
     uri:
      url: "http://localhost:8080/jenkins/login"
      follow_redirects: all
      method: GET
     register: _result
     until: _result.status == 200
     retries: 100 
     delay: 5 
   when: disable_anon_res is changed
# - name: sleep 10s
#   pause:
#    seconds: 10
# - name: create job
#   shell:
##    cmd: "java -jar jenkins-cli.jar -auth {{jenkins_username}}:{{jenkins_password}} -s http://localhost:8080/jenkins create-job test1 < /home/ubuntu/devops/jenkins/test.xml"
#   cmd: "java -jar jenkins-cli.jar -auth user:password1 -s http://localhost:8080/jenkins create-job test2 < /home/ubuntu/devops/jenkins/test.xml"
#    chdir: "{{jenkins_home}}"
# - name: make a jenkins  job
#   jenkins_job:
#     config: "{{ lookup('template', 'templates/test.xml.j2') }}"
#     name: test2
#     url: "{{ jenkins_server_url }}"
#     user: "{{ jenkins_username }}"
#     password: "{{ jenkins_password }}"